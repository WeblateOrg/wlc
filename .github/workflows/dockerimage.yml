name: Docker Image CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
    tags:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build, ${{ matrix.architecture }}
    strategy:
      matrix:
        architecture: [linux/amd64]
    env:
      MATRIX_ARCHITECTURE: ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache/${{ matrix.architecture }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.architecture }}
      - name: Configure Docker build
        run: .github/bin/get-buildx-args
      - name: Build the Docker image
        run: docker buildx build $(.github/bin/get-buildx-args)

  buildx:
    runs-on: ubuntu-20.04
    name: Build, ${{ matrix.architecture }}
    strategy:
      matrix:
        architecture: [linux/arm/v7, linux/arm64]
    env:
      MATRIX_ARCHITECTURE: ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.architecture }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache/${{ matrix.architecture }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.architecture }}
      - name: Configure Docker build
        run: .github/bin/get-buildx-args
      - name: Build the Docker image
        run: docker buildx build $(.github/bin/get-buildx-args)

  test:
    runs-on: ubuntu-20.04
    name: Test, ${{ matrix.architecture }}
    needs: [build]
    strategy:
      matrix:
        architecture: [linux/amd64]
    env:
      MATRIX_ARCHITECTURE: ${{ matrix.architecture }}
      COMPOSE_PROJECT_NAME: wl
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache/${{ matrix.architecture }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.architecture }}
      - name: Build the Docker image
        run: docker buildx build $(.github/bin/get-buildx-args load)
      - name: List Docker images
        run: docker image ls --all
      - name: Test the Docker image
        run: docker run --rm weblate/wlc:test version | grep "version"

  anchore:
    runs-on: ubuntu-20.04
    name: Anchore Container Scan, ${{ matrix.architecture }}
    needs: [build]
    strategy:
      matrix:
        architecture: [linux/amd64]
    env:
      MATRIX_ARCHITECTURE: ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache/${{ matrix.architecture }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.architecture }}
      - name: Build the Docker image
        run: docker buildx build $(.github/bin/get-buildx-args load)
      - name: List Docker images
        run: docker image ls --all
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Anchore scan action
        uses: anchore/scan-action@2.0.3
        with:
          image: "weblate/wlc:test"
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  push_dockerhub:
    runs-on: ubuntu-20.04
    name: Publish
    needs: [test, anchore, buildx]
    if: startsWith(github.ref, 'refs/tags/') || (github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache-arm64
        with:
          path: /tmp/.buildx-cache/linux/arm64
          key: ${{ runner.os }}-buildx-${{ github.sha }}-linux/arm64
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache-arm-v7
        with:
          path: /tmp/.buildx-cache/linux/arm/v7
          key: ${{ runner.os }}-buildx-${{ github.sha }}-linux/arm/v7
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache-amd64
        with:
          path: /tmp/.buildx-cache/linux/amd64
          key: ${{ runner.os }}-buildx-${{ github.sha }}-linux/amd64
      - name: DockerHub login
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Configure Docker build
        run: .github/bin/get-buildx-args publish
      - name: Publish the Docker images
        run: docker buildx build $(.github/bin/get-buildx-args publish)
